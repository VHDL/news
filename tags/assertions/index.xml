<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>assertions on VHDL News</title>
    <link>https://vhdl.github.io/news/tags/assertions/</link>
    <description>Recent content in assertions on VHDL News</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 30 Nov 2020 19:50:15 +0000</lastBuildDate>
    
	<atom:link href="https://vhdl.github.io/news/tags/assertions/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>VHDL/Verilog Cryptography cores incl. co-simulation with openSSL through GHDLs VHPIdirect</title>
      <link>https://vhdl.github.io/news/cores/24/</link>
      <pubDate>Mon, 30 Nov 2020 19:50:15 +0000</pubDate>
      
      <guid>https://vhdl.github.io/news/cores/24/</guid>
      <description>Cryptography IP-cores &amp;amp; tests written in VHDL / Verilog.
The components in this repository are not intended as productional code. They serve as proof of concept, for example how to implement a pipeline using only (local) variables instead of (global) signals. Furthermore they were used how to do a VHDL-to-Verilog conversion for learning purposes.
The testbenches to verify AES and CTR-AES are examples how useful GHDLs VHPIdirect is. They use openSSL as reference models to check the correctness of the VHDL implementation.</description>
    </item>
    
    <item>
      <title>Examples of using PSL for functional and formal verification of VHDL with GHDL (and SymbiYosys) </title>
      <link>https://vhdl.github.io/news/show/5/</link>
      <pubDate>Tue, 18 Aug 2020 16:31:26 +0000</pubDate>
      
      <guid>https://vhdl.github.io/news/show/5/</guid>
      <description>A collection of examples of using PSL (Property Specification Language) for functional and formal verification of VHDL designs with GHDL (and Yosys / SymbiYosys).
This is a project with the purpose to get a current state of PSL implementation in GHDL. It probably will find unsupported PSL features, incorrect implemented features or simple bugs like GHDL crashs. It is also intended for experiments with PSL when learning the language. You can play around with the examples, as they are pretty simple.</description>
    </item>
    
  </channel>
</rss>